{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from \"@angular/core\";\nlet TestComponent = class TestComponent {\n  constructor(route, testService, questionService, testHistory) {\n    this.route = route;\n    this.testService = testService;\n    this.questionService = questionService;\n    this.testHistory = testHistory;\n    this.now = 0;\n    this.selectedOptions = {};\n    this.textAnswers = {};\n    this.errorMsg = \"\";\n    this.showResultPage = false;\n    this.userScore = 0;\n    this.maxScore = 0;\n    this.passingScore = 80;\n    this.steps = [];\n    this.startTest = false; // Biến kiểm soát hiển thị màn hình hướng dẫn\n    this.timeLeft = 30 * 60; // Thời gian làm bài: 30 phút (tính bằng giây)\n  }\n\n  ngOnInit() {\n    this.testService.findAll().then(res => {\n      console.log(res);\n    });\n    this.route.paramMap.subscribe(params => {\n      this.code = params.get(\"code\");\n    });\n    this.testService.findTestByCode(this.code).then(res => {\n      console.log(res);\n      this.title = res.data.title;\n      this.companyName = res.data.username;\n      this.questionService.findByTestID(res.data.id).then(result => {\n        this.steps = result;\n        console.log(result);\n        this.totalSteps = this.steps.length;\n        this.maxScore = this.steps.filter(step => step.questionType === \"choiceAnswer\").length * 20;\n        console.log(this.maxScore);\n      });\n    });\n  }\n  // Bắt đầu đếm ngược thời gian\n  startTimer() {\n    this.timerInterval = setInterval(() => {\n      if (this.timeLeft > 0) {\n        this.timeLeft--;\n      } else {\n        clearInterval(this.timerInterval);\n        this.calculateScore(); // Tự động tính điểm khi hết giờ\n      }\n    }, 1000);\n  }\n  // Định dạng thời gian thành phút:giây\n  formatTime(seconds) {\n    const minutes = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${minutes}:${secs < 10 ? \"0\" : \"\"}${secs}`;\n  }\n  // Các phương thức khác giữ nguyên\n  getCurrentStep() {\n    return this.steps[this.now];\n  }\n  validate(stepId) {\n    const currentStep = this.steps[stepId - 1];\n    if (currentStep.questionType === \"choiceAnswer\" && !this.selectedOptions[stepId]) {\n      this.errorMsg = \"Hãy chọn đáp án\";\n      return false;\n    } else if (currentStep.questionType === \"textAnswer\" && !this.textAnswers[stepId]) {\n      this.errorMsg = \"Hãy điền câu trả lời!\";\n      return false;\n    }\n    this.errorMsg = \"\";\n    return true;\n  }\n  nextStep() {\n    if (this.validate(this.now + 1)) {\n      this.now = this.now + 1;\n    }\n    if (this.now === this.totalSteps) {\n      this.calculateScore();\n    }\n  }\n  prevStep() {\n    if (this.now > 0) {\n      this.now = this.now - 1;\n    }\n  }\n  calculateScore() {\n    this.userScore = 0;\n    var i = 0;\n    console.log(this.steps);\n    this.steps.forEach(step => {\n      i++;\n      if (step.questionType === \"choiceAnswer\") {\n        console.log(this.selectedOptions[i]);\n        const selectedAnswer = this.selectedOptions[i];\n        const correctAnswer = step.answers.find(answer => answer.correct);\n        console.log(selectedAnswer);\n        console.log(correctAnswer);\n        if (selectedAnswer === correctAnswer?.content) {\n          this.userScore += 20;\n        }\n      }\n    });\n    this.showResultPage = true;\n    clearInterval(this.timerInterval); // Dừng đếm ngược khi tính điểm\n  }\n\n  onOptionSelected(stepId, option) {\n    this.selectedOptions[stepId] = option;\n    console.log(this.selectedOptions[stepId]);\n  }\n  onTextAnswerChange(stepId, answer) {\n    this.textAnswers[stepId] = answer;\n    console.log(this.textAnswers);\n  }\n  isPassed() {\n    return this.userScore / this.maxScore * 100 >= this.passingScore;\n  }\n};\nTestComponent = __decorate([Component({\n  templateUrl: \"./test.component.html\",\n  styleUrls: [\"./test.component.css\"]\n})], TestComponent);\nexport { TestComponent };","map":{"version":3,"names":["Component","TestComponent","constructor","route","testService","questionService","testHistory","now","selectedOptions","textAnswers","errorMsg","showResultPage","userScore","maxScore","passingScore","steps","startTest","timeLeft","ngOnInit","findAll","then","res","console","log","paramMap","subscribe","params","code","get","findTestByCode","title","data","companyName","username","findByTestID","id","result","totalSteps","length","filter","step","questionType","startTimer","timerInterval","setInterval","clearInterval","calculateScore","formatTime","seconds","minutes","Math","floor","secs","getCurrentStep","validate","stepId","currentStep","nextStep","prevStep","i","forEach","selectedAnswer","correctAnswer","answers","find","answer","correct","content","onOptionSelected","option","onTextAnswerChange","isPassed","__decorate","templateUrl","styleUrls"],"sources":["D:\\kltn\\src\\KLTN-frontend\\quiz\\src\\app\\components\\test\\test.component.ts"],"sourcesContent":["import { Component, OnInit } from \"@angular/core\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { Test } from \"src/app/models/test.model\";\r\nimport { QuestionService } from \"src/app/services/question.service\";\r\nimport { TestService } from \"src/app/services/test.service\";\r\n\r\n@Component({\r\n  templateUrl: \"./test.component.html\",\r\n  styleUrls: [\"./test.component.css\"]\r\n})\r\nexport class TestComponent implements OnInit {\r\n  now: number = 0;\r\n  totalSteps: number;\r\n  selectedOptions: any = {};\r\n  textAnswers: any = {};\r\n  errorMsg: string = \"\";\r\n  showResultPage: boolean = false;\r\n  userScore: number = 0;\r\n  maxScore: number = 0;\r\n  passingScore: number = 80;\r\n  code: string;\r\n  test: Test;\r\n  title: string;\r\n  companyName: string;\r\n  steps = [];\r\n  startTest: boolean = false; // Biến kiểm soát hiển thị màn hình hướng dẫn\r\n  timeLeft: number = 30 * 60; // Thời gian làm bài: 30 phút (tính bằng giây)\r\n  timerInterval: any; // Biến lưu interval của timer\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private testService: TestService,\r\n    private questionService: QuestionService,\r\n    private testHistory: TestHistory\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.testService.findAll().then(\r\n      res => {\r\n        console.log(res);\r\n      }\r\n    );\r\n    this.route.paramMap.subscribe((params) => {\r\n      this.code = params.get(\"code\");\r\n    });\r\n\r\n    this.testService.findTestByCode(this.code).then((res) => {\r\n      console.log(res);\r\n      this.title = res.data.title;\r\n      this.companyName = res.data.username;\r\n      this.questionService.findByTestID(res.data.id).then((result) => {\r\n        this.steps = result;\r\n        console.log(result);\r\n        this.totalSteps = this.steps.length;\r\n        this.maxScore =\r\n          this.steps.filter((step) => step.questionType === \"choiceAnswer\")\r\n            .length * 20;\r\n        console.log(this.maxScore);\r\n      });\r\n    });\r\n  }\r\n\r\n  // Bắt đầu đếm ngược thời gian\r\n  startTimer() {\r\n    this.timerInterval = setInterval(() => {\r\n      if (this.timeLeft > 0) {\r\n        this.timeLeft--;\r\n      } else {\r\n        clearInterval(this.timerInterval);\r\n        this.calculateScore(); // Tự động tính điểm khi hết giờ\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  // Định dạng thời gian thành phút:giây\r\n  formatTime(seconds: number): string {\r\n    const minutes = Math.floor(seconds / 60);\r\n    const secs = seconds % 60;\r\n    return `${minutes}:${secs < 10 ? \"0\" : \"\"}${secs}`;\r\n  }\r\n\r\n  // Các phương thức khác giữ nguyên\r\n  getCurrentStep() {\r\n    return this.steps[this.now];\r\n  }\r\n\r\n  validate(stepId: number): boolean {\r\n    const currentStep = this.steps[stepId - 1];\r\n    if (\r\n      currentStep.questionType === \"choiceAnswer\" &&\r\n      !this.selectedOptions[stepId]\r\n    ) {\r\n      this.errorMsg = \"Hãy chọn đáp án\";\r\n      return false;\r\n    } else if (\r\n      currentStep.questionType === \"textAnswer\" &&\r\n      !this.textAnswers[stepId]\r\n    ) {\r\n      this.errorMsg = \"Hãy điền câu trả lời!\";\r\n      return false;\r\n    }\r\n    this.errorMsg = \"\";\r\n    return true;\r\n  }\r\n\r\n  nextStep() {\r\n    if (this.validate(this.now + 1)) {\r\n      this.now = this.now + 1;\r\n    }\r\n    if (this.now === this.totalSteps) {\r\n      this.calculateScore();\r\n    }\r\n  }\r\n\r\n  prevStep() {\r\n    if (this.now > 0) {\r\n      this.now = this.now - 1;\r\n    }\r\n  }\r\n\r\n  calculateScore() {\r\n    this.userScore = 0;\r\n    var i = 0;\r\n    console.log(this.steps);\r\n    this.steps.forEach((step) => {\r\n      i++;\r\n      if (step.questionType === \"choiceAnswer\") {\r\n        console.log(this.selectedOptions[i]);\r\n        const selectedAnswer = this.selectedOptions[i];\r\n        const correctAnswer = step.answers.find((answer) => answer.correct);\r\n        console.log(selectedAnswer);\r\n        console.log(correctAnswer);\r\n        if (selectedAnswer === correctAnswer?.content) {\r\n          this.userScore += 20;\r\n        }\r\n      }\r\n    });\r\n    this.showResultPage = true;\r\n    clearInterval(this.timerInterval); // Dừng đếm ngược khi tính điểm\r\n  }\r\n\r\n  onOptionSelected(stepId: number, option: string) {\r\n    this.selectedOptions[stepId] = option;\r\n    console.log(this.selectedOptions[stepId]);\r\n  }\r\n\r\n  onTextAnswerChange(stepId: number, answer: string) {\r\n    this.textAnswers[stepId] = answer;\r\n    console.log(this.textAnswers);\r\n  }\r\n\r\n  isPassed() {\r\n    return (this.userScore / this.maxScore) * 100 >= this.passingScore;\r\n  }\r\n}"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAUjD,IAAaC,aAAa,GAA1B,MAAaA,aAAa;EAmBxBC,YACUC,KAAqB,EACrBC,WAAwB,EACxBC,eAAgC,EAChCC,WAAwB;IAHxB,KAAAH,KAAK,GAALA,KAAK;IACL,KAAAC,WAAW,GAAXA,WAAW;IACX,KAAAC,eAAe,GAAfA,eAAe;IACf,KAAAC,WAAW,GAAXA,WAAW;IAtBrB,KAAAC,GAAG,GAAW,CAAC;IAEf,KAAAC,eAAe,GAAQ,EAAE;IACzB,KAAAC,WAAW,GAAQ,EAAE;IACrB,KAAAC,QAAQ,GAAW,EAAE;IACrB,KAAAC,cAAc,GAAY,KAAK;IAC/B,KAAAC,SAAS,GAAW,CAAC;IACrB,KAAAC,QAAQ,GAAW,CAAC;IACpB,KAAAC,YAAY,GAAW,EAAE;IAKzB,KAAAC,KAAK,GAAG,EAAE;IACV,KAAAC,SAAS,GAAY,KAAK,CAAC,CAAC;IAC5B,KAAAC,QAAQ,GAAW,EAAE,GAAG,EAAE,CAAC,CAAC;EAQzB;;EAEHC,QAAQA,CAAA;IACN,IAAI,CAACd,WAAW,CAACe,OAAO,EAAE,CAACC,IAAI,CAC7BC,GAAG,IAAG;MACJC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IAClB,CAAC,CACF;IACD,IAAI,CAAClB,KAAK,CAACqB,QAAQ,CAACC,SAAS,CAAEC,MAAM,IAAI;MACvC,IAAI,CAACC,IAAI,GAAGD,MAAM,CAACE,GAAG,CAAC,MAAM,CAAC;IAChC,CAAC,CAAC;IAEF,IAAI,CAACxB,WAAW,CAACyB,cAAc,CAAC,IAAI,CAACF,IAAI,CAAC,CAACP,IAAI,CAAEC,GAAG,IAAI;MACtDC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAChB,IAAI,CAACS,KAAK,GAAGT,GAAG,CAACU,IAAI,CAACD,KAAK;MAC3B,IAAI,CAACE,WAAW,GAAGX,GAAG,CAACU,IAAI,CAACE,QAAQ;MACpC,IAAI,CAAC5B,eAAe,CAAC6B,YAAY,CAACb,GAAG,CAACU,IAAI,CAACI,EAAE,CAAC,CAACf,IAAI,CAAEgB,MAAM,IAAI;QAC7D,IAAI,CAACrB,KAAK,GAAGqB,MAAM;QACnBd,OAAO,CAACC,GAAG,CAACa,MAAM,CAAC;QACnB,IAAI,CAACC,UAAU,GAAG,IAAI,CAACtB,KAAK,CAACuB,MAAM;QACnC,IAAI,CAACzB,QAAQ,GACX,IAAI,CAACE,KAAK,CAACwB,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,YAAY,KAAK,cAAc,CAAC,CAC9DH,MAAM,GAAG,EAAE;QAChBhB,OAAO,CAACC,GAAG,CAAC,IAAI,CAACV,QAAQ,CAAC;MAC5B,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;EAEA;EACA6B,UAAUA,CAAA;IACR,IAAI,CAACC,aAAa,GAAGC,WAAW,CAAC,MAAK;MACpC,IAAI,IAAI,CAAC3B,QAAQ,GAAG,CAAC,EAAE;QACrB,IAAI,CAACA,QAAQ,EAAE;OAChB,MAAM;QACL4B,aAAa,CAAC,IAAI,CAACF,aAAa,CAAC;QACjC,IAAI,CAACG,cAAc,EAAE,CAAC,CAAC;;IAE3B,CAAC,EAAE,IAAI,CAAC;EACV;EAEA;EACAC,UAAUA,CAACC,OAAe;IACxB,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACH,OAAO,GAAG,EAAE,CAAC;IACxC,MAAMI,IAAI,GAAGJ,OAAO,GAAG,EAAE;IACzB,OAAO,GAAGC,OAAO,IAAIG,IAAI,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAGA,IAAI,EAAE;EACpD;EAEA;EACAC,cAAcA,CAAA;IACZ,OAAO,IAAI,CAACtC,KAAK,CAAC,IAAI,CAACR,GAAG,CAAC;EAC7B;EAEA+C,QAAQA,CAACC,MAAc;IACrB,MAAMC,WAAW,GAAG,IAAI,CAACzC,KAAK,CAACwC,MAAM,GAAG,CAAC,CAAC;IAC1C,IACEC,WAAW,CAACf,YAAY,KAAK,cAAc,IAC3C,CAAC,IAAI,CAACjC,eAAe,CAAC+C,MAAM,CAAC,EAC7B;MACA,IAAI,CAAC7C,QAAQ,GAAG,iBAAiB;MACjC,OAAO,KAAK;KACb,MAAM,IACL8C,WAAW,CAACf,YAAY,KAAK,YAAY,IACzC,CAAC,IAAI,CAAChC,WAAW,CAAC8C,MAAM,CAAC,EACzB;MACA,IAAI,CAAC7C,QAAQ,GAAG,uBAAuB;MACvC,OAAO,KAAK;;IAEd,IAAI,CAACA,QAAQ,GAAG,EAAE;IAClB,OAAO,IAAI;EACb;EAEA+C,QAAQA,CAAA;IACN,IAAI,IAAI,CAACH,QAAQ,CAAC,IAAI,CAAC/C,GAAG,GAAG,CAAC,CAAC,EAAE;MAC/B,IAAI,CAACA,GAAG,GAAG,IAAI,CAACA,GAAG,GAAG,CAAC;;IAEzB,IAAI,IAAI,CAACA,GAAG,KAAK,IAAI,CAAC8B,UAAU,EAAE;MAChC,IAAI,CAACS,cAAc,EAAE;;EAEzB;EAEAY,QAAQA,CAAA;IACN,IAAI,IAAI,CAACnD,GAAG,GAAG,CAAC,EAAE;MAChB,IAAI,CAACA,GAAG,GAAG,IAAI,CAACA,GAAG,GAAG,CAAC;;EAE3B;EAEAuC,cAAcA,CAAA;IACZ,IAAI,CAAClC,SAAS,GAAG,CAAC;IAClB,IAAI+C,CAAC,GAAG,CAAC;IACTrC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACR,KAAK,CAAC;IACvB,IAAI,CAACA,KAAK,CAAC6C,OAAO,CAAEpB,IAAI,IAAI;MAC1BmB,CAAC,EAAE;MACH,IAAInB,IAAI,CAACC,YAAY,KAAK,cAAc,EAAE;QACxCnB,OAAO,CAACC,GAAG,CAAC,IAAI,CAACf,eAAe,CAACmD,CAAC,CAAC,CAAC;QACpC,MAAME,cAAc,GAAG,IAAI,CAACrD,eAAe,CAACmD,CAAC,CAAC;QAC9C,MAAMG,aAAa,GAAGtB,IAAI,CAACuB,OAAO,CAACC,IAAI,CAAEC,MAAM,IAAKA,MAAM,CAACC,OAAO,CAAC;QACnE5C,OAAO,CAACC,GAAG,CAACsC,cAAc,CAAC;QAC3BvC,OAAO,CAACC,GAAG,CAACuC,aAAa,CAAC;QAC1B,IAAID,cAAc,KAAKC,aAAa,EAAEK,OAAO,EAAE;UAC7C,IAAI,CAACvD,SAAS,IAAI,EAAE;;;IAG1B,CAAC,CAAC;IACF,IAAI,CAACD,cAAc,GAAG,IAAI;IAC1BkC,aAAa,CAAC,IAAI,CAACF,aAAa,CAAC,CAAC,CAAC;EACrC;;EAEAyB,gBAAgBA,CAACb,MAAc,EAAEc,MAAc;IAC7C,IAAI,CAAC7D,eAAe,CAAC+C,MAAM,CAAC,GAAGc,MAAM;IACrC/C,OAAO,CAACC,GAAG,CAAC,IAAI,CAACf,eAAe,CAAC+C,MAAM,CAAC,CAAC;EAC3C;EAEAe,kBAAkBA,CAACf,MAAc,EAAEU,MAAc;IAC/C,IAAI,CAACxD,WAAW,CAAC8C,MAAM,CAAC,GAAGU,MAAM;IACjC3C,OAAO,CAACC,GAAG,CAAC,IAAI,CAACd,WAAW,CAAC;EAC/B;EAEA8D,QAAQA,CAAA;IACN,OAAQ,IAAI,CAAC3D,SAAS,GAAG,IAAI,CAACC,QAAQ,GAAI,GAAG,IAAI,IAAI,CAACC,YAAY;EACpE;CACD;AAhJYb,aAAa,GAAAuE,UAAA,EAJzBxE,SAAS,CAAC;EACTyE,WAAW,EAAE,uBAAuB;EACpCC,SAAS,EAAE,CAAC,sBAAsB;CACnC,CAAC,C,EACWzE,aAAa,CAgJzB;SAhJYA,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}