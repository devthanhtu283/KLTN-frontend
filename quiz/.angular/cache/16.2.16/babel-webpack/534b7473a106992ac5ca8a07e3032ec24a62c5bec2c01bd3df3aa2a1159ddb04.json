{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet LoginComponent = class LoginComponent {\n  constructor(router, userService) {\n    this.router = router;\n    this.userService = userService;\n    this.username = '';\n    this.password = '';\n  }\n  onLogin() {\n    if (this.username === 'acc1' && this.password === '123') {\n      this.router.navigate(['/code']);\n    } else {\n      alert('Invalid credentials. Please try again.');\n    }\n  }\n};\nLoginComponent = __decorate([Component({\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})], LoginComponent);\nexport { LoginComponent };","map":{"version":3,"names":["Component","LoginComponent","constructor","router","userService","username","password","onLogin","navigate","alert","__decorate","templateUrl","styleUrls"],"sources":["D:\\kltn\\fe\\user\\src\\app\\components\\login\\login.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent {\r\n  username: string = '';\r\n  password: string = '';\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private userService: User\r\n    \r\n    ) {}\r\n\r\n  onLogin() {\r\n\r\n    if (this.username === 'acc1' && this.password === '123') {\r\n\r\n      this.router.navigate(['/code']);\r\n    } else {\r\n      alert('Invalid credentials. Please try again.');\r\n    }\r\n  }\r\n}\r\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAOzC,IAAaC,cAAc,GAA3B,MAAaA,cAAc;EAIzBC,YACUC,MAAc,EACdC,WAAiB;IADjB,KAAAD,MAAM,GAANA,MAAM;IACN,KAAAC,WAAW,GAAXA,WAAW;IALrB,KAAAC,QAAQ,GAAW,EAAE;IACrB,KAAAC,QAAQ,GAAW,EAAE;EAMhB;EAELC,OAAOA,CAAA;IAEL,IAAI,IAAI,CAACF,QAAQ,KAAK,MAAM,IAAI,IAAI,CAACC,QAAQ,KAAK,KAAK,EAAE;MAEvD,IAAI,CAACH,MAAM,CAACK,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;KAChC,MAAM;MACLC,KAAK,CAAC,wCAAwC,CAAC;;EAEnD;CACD;AAnBYR,cAAc,GAAAS,UAAA,EAJ1BV,SAAS,CAAC;EACTW,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,uBAAuB;CACpC,CAAC,C,EACWX,cAAc,CAmB1B;SAnBYA,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}